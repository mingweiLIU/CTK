<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <PreferredToolArchitecture>x64</PreferredToolArchitecture>
  </PropertyGroup>
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|x64">
      <Configuration>MinSizeRel</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|x64">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{C208F0A9-7526-3633-9A0A-1EA5E2266FA2}</ProjectGuid>
    <WindowsTargetPlatformVersion>10.0.18362.0</WindowsTargetPlatformVersion>
    <Keyword>Win32Proj</Keyword>
    <Platform>x64</Platform>
    <ProjectName>CTKCore</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\OpenSource\CTK\build\CTK-build\bin\Debug\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CTKCore.dir\Debug\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CTKCore</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">.dll</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\OpenSource\CTK\build\CTK-build\bin\Release\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CTKCore.dir\Release\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CTKCore</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Release|x64'">.dll</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\OpenSource\CTK\build\CTK-build\bin\MinSizeRel\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">CTKCore.dir\MinSizeRel\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">CTKCore</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">.dll</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\OpenSource\CTK\build\CTK-build\bin\RelWithDebInfo\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">CTKCore.dir\RelWithDebInfo\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">CTKCore</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">.dll</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">true</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">true</GenerateManifest>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>E:\OpenSource\CTK\Libs\Core;E:\OpenSource\CTK\build\CTK-build\Libs\Core;E:\OpenSource\CTK\build\CTK-build\Libs\Core\Resources\UI;E:\OpenSource\CTK\build\CTK-build;D:\Apps\anaconda3\envs\builder\Library\include\qt;D:\Apps\anaconda3\envs\builder\Library\include\qt\QtCore;D:\Apps\anaconda3\envs\builder\Library\.\mkspecs\win32-msvc;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
      <CompileAs>CompileAsCpp</CompileAs>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <DisableSpecificWarnings>4290</DisableSpecificWarnings>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>Disabled</InlineFunctionExpansion>
      <Optimization>Disabled</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NOMINMAX;QT_CORE_LIB;CMAKE_INTDIR="Debug";CTKCore_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_DEBUG;_WINDOWS;NOMINMAX;QT_CORE_LIB;CMAKE_INTDIR=\"Debug\";CTKCore_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>E:\OpenSource\CTK\Libs\Core;E:\OpenSource\CTK\build\CTK-build\Libs\Core;E:\OpenSource\CTK\build\CTK-build\Libs\Core\Resources\UI;E:\OpenSource\CTK\build\CTK-build;D:\Apps\anaconda3\envs\builder\Library\include\qt;D:\Apps\anaconda3\envs\builder\Library\include\qt\QtCore;D:\Apps\anaconda3\envs\builder\Library\.\mkspecs\win32-msvc;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>E:\OpenSource\CTK\Libs\Core;E:\OpenSource\CTK\build\CTK-build\Libs\Core;E:\OpenSource\CTK\build\CTK-build\Libs\Core\Resources\UI;E:\OpenSource\CTK\build\CTK-build;D:\Apps\anaconda3\envs\builder\Library\include\qt;D:\Apps\anaconda3\envs\builder\Library\include\qt\QtCore;D:\Apps\anaconda3\envs\builder\Library\.\mkspecs\win32-msvc;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalDependencies>D:\Apps\anaconda3\envs\builder\Library\lib\Qt5Core_conda.lib;dbghelp.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>E:/OpenSource/CTK/build/CTK-build/bin/Debug/CTKCore.lib</ImportLibrary>
      <ProgramDataBaseFile>E:/OpenSource/CTK/build/CTK-build/bin/Debug/CTKCore.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>E:\OpenSource\CTK\Libs\Core;E:\OpenSource\CTK\build\CTK-build\Libs\Core;E:\OpenSource\CTK\build\CTK-build\Libs\Core\Resources\UI;E:\OpenSource\CTK\build\CTK-build;D:\Apps\anaconda3\envs\builder\Library\include\qt;D:\Apps\anaconda3\envs\builder\Library\include\qt\QtCore;D:\Apps\anaconda3\envs\builder\Library\.\mkspecs\win32-msvc;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <CompileAs>CompileAsCpp</CompileAs>
      <DisableSpecificWarnings>4290</DisableSpecificWarnings>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NOMINMAX;NDEBUG;QT_CORE_LIB;QT_NO_DEBUG;CMAKE_INTDIR="Release";CTKCore_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat>
      </DebugInformationFormat>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NOMINMAX;NDEBUG;QT_CORE_LIB;QT_NO_DEBUG;CMAKE_INTDIR=\"Release\";CTKCore_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>E:\OpenSource\CTK\Libs\Core;E:\OpenSource\CTK\build\CTK-build\Libs\Core;E:\OpenSource\CTK\build\CTK-build\Libs\Core\Resources\UI;E:\OpenSource\CTK\build\CTK-build;D:\Apps\anaconda3\envs\builder\Library\include\qt;D:\Apps\anaconda3\envs\builder\Library\include\qt\QtCore;D:\Apps\anaconda3\envs\builder\Library\.\mkspecs\win32-msvc;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>E:\OpenSource\CTK\Libs\Core;E:\OpenSource\CTK\build\CTK-build\Libs\Core;E:\OpenSource\CTK\build\CTK-build\Libs\Core\Resources\UI;E:\OpenSource\CTK\build\CTK-build;D:\Apps\anaconda3\envs\builder\Library\include\qt;D:\Apps\anaconda3\envs\builder\Library\include\qt\QtCore;D:\Apps\anaconda3\envs\builder\Library\.\mkspecs\win32-msvc;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalDependencies>D:\Apps\anaconda3\envs\builder\Library\lib\Qt5Core_conda.lib;dbghelp.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>E:/OpenSource/CTK/build/CTK-build/bin/Release/CTKCore.lib</ImportLibrary>
      <ProgramDataBaseFile>E:/OpenSource/CTK/build/CTK-build/bin/Release/CTKCore.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>E:\OpenSource\CTK\Libs\Core;E:\OpenSource\CTK\build\CTK-build\Libs\Core;E:\OpenSource\CTK\build\CTK-build\Libs\Core\Resources\UI;E:\OpenSource\CTK\build\CTK-build;D:\Apps\anaconda3\envs\builder\Library\include\qt;D:\Apps\anaconda3\envs\builder\Library\include\qt\QtCore;D:\Apps\anaconda3\envs\builder\Library\.\mkspecs\win32-msvc;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <CompileAs>CompileAsCpp</CompileAs>
      <DisableSpecificWarnings>4290</DisableSpecificWarnings>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <Optimization>MinSpace</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NOMINMAX;NDEBUG;QT_CORE_LIB;QT_NO_DEBUG;CMAKE_INTDIR="MinSizeRel";CTKCore_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat>
      </DebugInformationFormat>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NOMINMAX;NDEBUG;QT_CORE_LIB;QT_NO_DEBUG;CMAKE_INTDIR=\"MinSizeRel\";CTKCore_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>E:\OpenSource\CTK\Libs\Core;E:\OpenSource\CTK\build\CTK-build\Libs\Core;E:\OpenSource\CTK\build\CTK-build\Libs\Core\Resources\UI;E:\OpenSource\CTK\build\CTK-build;D:\Apps\anaconda3\envs\builder\Library\include\qt;D:\Apps\anaconda3\envs\builder\Library\include\qt\QtCore;D:\Apps\anaconda3\envs\builder\Library\.\mkspecs\win32-msvc;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>E:\OpenSource\CTK\Libs\Core;E:\OpenSource\CTK\build\CTK-build\Libs\Core;E:\OpenSource\CTK\build\CTK-build\Libs\Core\Resources\UI;E:\OpenSource\CTK\build\CTK-build;D:\Apps\anaconda3\envs\builder\Library\include\qt;D:\Apps\anaconda3\envs\builder\Library\include\qt\QtCore;D:\Apps\anaconda3\envs\builder\Library\.\mkspecs\win32-msvc;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalDependencies>D:\Apps\anaconda3\envs\builder\Library\lib\Qt5Core_conda.lib;dbghelp.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>E:/OpenSource/CTK/build/CTK-build/bin/MinSizeRel/CTKCore.lib</ImportLibrary>
      <ProgramDataBaseFile>E:/OpenSource/CTK/build/CTK-build/bin/MinSizeRel/CTKCore.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>E:\OpenSource\CTK\Libs\Core;E:\OpenSource\CTK\build\CTK-build\Libs\Core;E:\OpenSource\CTK\build\CTK-build\Libs\Core\Resources\UI;E:\OpenSource\CTK\build\CTK-build;D:\Apps\anaconda3\envs\builder\Library\include\qt;D:\Apps\anaconda3\envs\builder\Library\include\qt\QtCore;D:\Apps\anaconda3\envs\builder\Library\.\mkspecs\win32-msvc;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <CompileAs>CompileAsCpp</CompileAs>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <DisableSpecificWarnings>4290</DisableSpecificWarnings>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NOMINMAX;NDEBUG;QT_CORE_LIB;QT_NO_DEBUG;CMAKE_INTDIR="RelWithDebInfo";CTKCore_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NOMINMAX;NDEBUG;QT_CORE_LIB;QT_NO_DEBUG;CMAKE_INTDIR=\"RelWithDebInfo\";CTKCore_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>E:\OpenSource\CTK\Libs\Core;E:\OpenSource\CTK\build\CTK-build\Libs\Core;E:\OpenSource\CTK\build\CTK-build\Libs\Core\Resources\UI;E:\OpenSource\CTK\build\CTK-build;D:\Apps\anaconda3\envs\builder\Library\include\qt;D:\Apps\anaconda3\envs\builder\Library\include\qt\QtCore;D:\Apps\anaconda3\envs\builder\Library\.\mkspecs\win32-msvc;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>E:\OpenSource\CTK\Libs\Core;E:\OpenSource\CTK\build\CTK-build\Libs\Core;E:\OpenSource\CTK\build\CTK-build\Libs\Core\Resources\UI;E:\OpenSource\CTK\build\CTK-build;D:\Apps\anaconda3\envs\builder\Library\include\qt;D:\Apps\anaconda3\envs\builder\Library\include\qt\QtCore;D:\Apps\anaconda3\envs\builder\Library\.\mkspecs\win32-msvc;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalDependencies>D:\Apps\anaconda3\envs\builder\Library\lib\Qt5Core_conda.lib;dbghelp.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>E:/OpenSource/CTK/build/CTK-build/bin/RelWithDebInfo/CTKCore.lib</ImportLibrary>
      <ProgramDataBaseFile>E:/OpenSource/CTK/build/CTK-build/bin/RelWithDebInfo/CTKCore.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="E:\OpenSource\CTK\build\CTK-build\CMakeFiles\d99d4ff0ddd69a2de1c1506a42cbc5c7\moc_ctkBooleanMapper.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating moc_ctkBooleanMapper.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd E:\OpenSource\CTK\build\CTK-build\Libs\Core
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\Apps\anaconda3\envs\builder\Library\bin\moc.exe @E:/OpenSource/CTK/build/CTK-build/Libs/Core/moc_ctkBooleanMapper.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\OpenSource\CTK\Libs\Core\ctkBooleanMapper.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkBooleanMapper.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating moc_ctkBooleanMapper.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd E:\OpenSource\CTK\build\CTK-build\Libs\Core
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\Apps\anaconda3\envs\builder\Library\bin\moc.exe @E:/OpenSource/CTK/build/CTK-build/Libs/Core/moc_ctkBooleanMapper.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\OpenSource\CTK\Libs\Core\ctkBooleanMapper.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkBooleanMapper.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating moc_ctkBooleanMapper.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd E:\OpenSource\CTK\build\CTK-build\Libs\Core
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\Apps\anaconda3\envs\builder\Library\bin\moc.exe @E:/OpenSource/CTK/build/CTK-build/Libs/Core/moc_ctkBooleanMapper.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\OpenSource\CTK\Libs\Core\ctkBooleanMapper.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkBooleanMapper.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating moc_ctkBooleanMapper.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd E:\OpenSource\CTK\build\CTK-build\Libs\Core
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\Apps\anaconda3\envs\builder\Library\bin\moc.exe @E:/OpenSource/CTK/build/CTK-build/Libs/Core/moc_ctkBooleanMapper.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\OpenSource\CTK\Libs\Core\ctkBooleanMapper.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkBooleanMapper.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\OpenSource\CTK\build\CTK-build\CMakeFiles\d99d4ff0ddd69a2de1c1506a42cbc5c7\moc_ctkCallback.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating moc_ctkCallback.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd E:\OpenSource\CTK\build\CTK-build\Libs\Core
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\Apps\anaconda3\envs\builder\Library\bin\moc.exe @E:/OpenSource/CTK/build/CTK-build/Libs/Core/moc_ctkCallback.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\OpenSource\CTK\Libs\Core\ctkCallback.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkCallback.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating moc_ctkCallback.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd E:\OpenSource\CTK\build\CTK-build\Libs\Core
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\Apps\anaconda3\envs\builder\Library\bin\moc.exe @E:/OpenSource/CTK/build/CTK-build/Libs/Core/moc_ctkCallback.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\OpenSource\CTK\Libs\Core\ctkCallback.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkCallback.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating moc_ctkCallback.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd E:\OpenSource\CTK\build\CTK-build\Libs\Core
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\Apps\anaconda3\envs\builder\Library\bin\moc.exe @E:/OpenSource/CTK/build/CTK-build/Libs/Core/moc_ctkCallback.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\OpenSource\CTK\Libs\Core\ctkCallback.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkCallback.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating moc_ctkCallback.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd E:\OpenSource\CTK\build\CTK-build\Libs\Core
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\Apps\anaconda3\envs\builder\Library\bin\moc.exe @E:/OpenSource/CTK/build/CTK-build/Libs/Core/moc_ctkCallback.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\OpenSource\CTK\Libs\Core\ctkCallback.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkCallback.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\OpenSource\CTK\build\CTK-build\CMakeFiles\d99d4ff0ddd69a2de1c1506a42cbc5c7\moc_ctkCommandLineParser.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating moc_ctkCommandLineParser.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd E:\OpenSource\CTK\build\CTK-build\Libs\Core
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\Apps\anaconda3\envs\builder\Library\bin\moc.exe @E:/OpenSource/CTK/build/CTK-build/Libs/Core/moc_ctkCommandLineParser.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\OpenSource\CTK\Libs\Core\ctkCommandLineParser.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkCommandLineParser.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating moc_ctkCommandLineParser.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd E:\OpenSource\CTK\build\CTK-build\Libs\Core
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\Apps\anaconda3\envs\builder\Library\bin\moc.exe @E:/OpenSource/CTK/build/CTK-build/Libs/Core/moc_ctkCommandLineParser.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\OpenSource\CTK\Libs\Core\ctkCommandLineParser.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkCommandLineParser.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating moc_ctkCommandLineParser.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd E:\OpenSource\CTK\build\CTK-build\Libs\Core
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\Apps\anaconda3\envs\builder\Library\bin\moc.exe @E:/OpenSource/CTK/build/CTK-build/Libs/Core/moc_ctkCommandLineParser.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\OpenSource\CTK\Libs\Core\ctkCommandLineParser.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkCommandLineParser.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating moc_ctkCommandLineParser.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd E:\OpenSource\CTK\build\CTK-build\Libs\Core
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\Apps\anaconda3\envs\builder\Library\bin\moc.exe @E:/OpenSource/CTK/build/CTK-build/Libs/Core/moc_ctkCommandLineParser.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\OpenSource\CTK\Libs\Core\ctkCommandLineParser.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkCommandLineParser.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\OpenSource\CTK\build\CTK-build\CMakeFiles\d99d4ff0ddd69a2de1c1506a42cbc5c7\moc_ctkCoreSettings.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating moc_ctkCoreSettings.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd E:\OpenSource\CTK\build\CTK-build\Libs\Core
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\Apps\anaconda3\envs\builder\Library\bin\moc.exe @E:/OpenSource/CTK/build/CTK-build/Libs/Core/moc_ctkCoreSettings.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\OpenSource\CTK\Libs\Core\ctkCoreSettings.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkCoreSettings.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating moc_ctkCoreSettings.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd E:\OpenSource\CTK\build\CTK-build\Libs\Core
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\Apps\anaconda3\envs\builder\Library\bin\moc.exe @E:/OpenSource/CTK/build/CTK-build/Libs/Core/moc_ctkCoreSettings.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\OpenSource\CTK\Libs\Core\ctkCoreSettings.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkCoreSettings.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating moc_ctkCoreSettings.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd E:\OpenSource\CTK\build\CTK-build\Libs\Core
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\Apps\anaconda3\envs\builder\Library\bin\moc.exe @E:/OpenSource/CTK/build/CTK-build/Libs/Core/moc_ctkCoreSettings.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\OpenSource\CTK\Libs\Core\ctkCoreSettings.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkCoreSettings.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating moc_ctkCoreSettings.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd E:\OpenSource\CTK\build\CTK-build\Libs\Core
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\Apps\anaconda3\envs\builder\Library\bin\moc.exe @E:/OpenSource/CTK/build/CTK-build/Libs/Core/moc_ctkCoreSettings.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\OpenSource\CTK\Libs\Core\ctkCoreSettings.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkCoreSettings.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\OpenSource\CTK\build\CTK-build\CMakeFiles\d99d4ff0ddd69a2de1c1506a42cbc5c7\moc_ctkErrorLogAbstractMessageHandler.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating moc_ctkErrorLogAbstractMessageHandler.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd E:\OpenSource\CTK\build\CTK-build\Libs\Core
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\Apps\anaconda3\envs\builder\Library\bin\moc.exe @E:/OpenSource/CTK/build/CTK-build/Libs/Core/moc_ctkErrorLogAbstractMessageHandler.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\OpenSource\CTK\Libs\Core\ctkErrorLogAbstractMessageHandler.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkErrorLogAbstractMessageHandler.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating moc_ctkErrorLogAbstractMessageHandler.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd E:\OpenSource\CTK\build\CTK-build\Libs\Core
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\Apps\anaconda3\envs\builder\Library\bin\moc.exe @E:/OpenSource/CTK/build/CTK-build/Libs/Core/moc_ctkErrorLogAbstractMessageHandler.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\OpenSource\CTK\Libs\Core\ctkErrorLogAbstractMessageHandler.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkErrorLogAbstractMessageHandler.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating moc_ctkErrorLogAbstractMessageHandler.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd E:\OpenSource\CTK\build\CTK-build\Libs\Core
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\Apps\anaconda3\envs\builder\Library\bin\moc.exe @E:/OpenSource/CTK/build/CTK-build/Libs/Core/moc_ctkErrorLogAbstractMessageHandler.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\OpenSource\CTK\Libs\Core\ctkErrorLogAbstractMessageHandler.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkErrorLogAbstractMessageHandler.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating moc_ctkErrorLogAbstractMessageHandler.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd E:\OpenSource\CTK\build\CTK-build\Libs\Core
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\Apps\anaconda3\envs\builder\Library\bin\moc.exe @E:/OpenSource/CTK/build/CTK-build/Libs/Core/moc_ctkErrorLogAbstractMessageHandler.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\OpenSource\CTK\Libs\Core\ctkErrorLogAbstractMessageHandler.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkErrorLogAbstractMessageHandler.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\OpenSource\CTK\build\CTK-build\CMakeFiles\d99d4ff0ddd69a2de1c1506a42cbc5c7\moc_ctkErrorLogAbstractModel.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating moc_ctkErrorLogAbstractModel.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd E:\OpenSource\CTK\build\CTK-build\Libs\Core
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\Apps\anaconda3\envs\builder\Library\bin\moc.exe @E:/OpenSource/CTK/build/CTK-build/Libs/Core/moc_ctkErrorLogAbstractModel.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\OpenSource\CTK\Libs\Core\ctkErrorLogAbstractModel.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkErrorLogAbstractModel.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating moc_ctkErrorLogAbstractModel.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd E:\OpenSource\CTK\build\CTK-build\Libs\Core
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\Apps\anaconda3\envs\builder\Library\bin\moc.exe @E:/OpenSource/CTK/build/CTK-build/Libs/Core/moc_ctkErrorLogAbstractModel.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\OpenSource\CTK\Libs\Core\ctkErrorLogAbstractModel.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkErrorLogAbstractModel.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating moc_ctkErrorLogAbstractModel.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd E:\OpenSource\CTK\build\CTK-build\Libs\Core
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\Apps\anaconda3\envs\builder\Library\bin\moc.exe @E:/OpenSource/CTK/build/CTK-build/Libs/Core/moc_ctkErrorLogAbstractModel.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\OpenSource\CTK\Libs\Core\ctkErrorLogAbstractModel.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkErrorLogAbstractModel.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating moc_ctkErrorLogAbstractModel.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd E:\OpenSource\CTK\build\CTK-build\Libs\Core
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\Apps\anaconda3\envs\builder\Library\bin\moc.exe @E:/OpenSource/CTK/build/CTK-build/Libs/Core/moc_ctkErrorLogAbstractModel.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\OpenSource\CTK\Libs\Core\ctkErrorLogAbstractModel.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkErrorLogAbstractModel.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\OpenSource\CTK\build\CTK-build\CMakeFiles\d99d4ff0ddd69a2de1c1506a42cbc5c7\moc_ctkErrorLogFDMessageHandler_p.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating moc_ctkErrorLogFDMessageHandler_p.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd E:\OpenSource\CTK\build\CTK-build\Libs\Core
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\Apps\anaconda3\envs\builder\Library\bin\moc.exe @E:/OpenSource/CTK/build/CTK-build/Libs/Core/moc_ctkErrorLogFDMessageHandler_p.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\OpenSource\CTK\Libs\Core\ctkErrorLogFDMessageHandler_p.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkErrorLogFDMessageHandler_p.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating moc_ctkErrorLogFDMessageHandler_p.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd E:\OpenSource\CTK\build\CTK-build\Libs\Core
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\Apps\anaconda3\envs\builder\Library\bin\moc.exe @E:/OpenSource/CTK/build/CTK-build/Libs/Core/moc_ctkErrorLogFDMessageHandler_p.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\OpenSource\CTK\Libs\Core\ctkErrorLogFDMessageHandler_p.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkErrorLogFDMessageHandler_p.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating moc_ctkErrorLogFDMessageHandler_p.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd E:\OpenSource\CTK\build\CTK-build\Libs\Core
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\Apps\anaconda3\envs\builder\Library\bin\moc.exe @E:/OpenSource/CTK/build/CTK-build/Libs/Core/moc_ctkErrorLogFDMessageHandler_p.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\OpenSource\CTK\Libs\Core\ctkErrorLogFDMessageHandler_p.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkErrorLogFDMessageHandler_p.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating moc_ctkErrorLogFDMessageHandler_p.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd E:\OpenSource\CTK\build\CTK-build\Libs\Core
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\Apps\anaconda3\envs\builder\Library\bin\moc.exe @E:/OpenSource/CTK/build/CTK-build/Libs/Core/moc_ctkErrorLogFDMessageHandler_p.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\OpenSource\CTK\Libs\Core\ctkErrorLogFDMessageHandler_p.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkErrorLogFDMessageHandler_p.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\OpenSource\CTK\build\CTK-build\CMakeFiles\d99d4ff0ddd69a2de1c1506a42cbc5c7\moc_ctkErrorLogLevel.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating moc_ctkErrorLogLevel.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd E:\OpenSource\CTK\build\CTK-build\Libs\Core
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\Apps\anaconda3\envs\builder\Library\bin\moc.exe @E:/OpenSource/CTK/build/CTK-build/Libs/Core/moc_ctkErrorLogLevel.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\OpenSource\CTK\Libs\Core\ctkErrorLogLevel.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkErrorLogLevel.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating moc_ctkErrorLogLevel.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd E:\OpenSource\CTK\build\CTK-build\Libs\Core
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\Apps\anaconda3\envs\builder\Library\bin\moc.exe @E:/OpenSource/CTK/build/CTK-build/Libs/Core/moc_ctkErrorLogLevel.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\OpenSource\CTK\Libs\Core\ctkErrorLogLevel.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkErrorLogLevel.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating moc_ctkErrorLogLevel.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd E:\OpenSource\CTK\build\CTK-build\Libs\Core
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\Apps\anaconda3\envs\builder\Library\bin\moc.exe @E:/OpenSource/CTK/build/CTK-build/Libs/Core/moc_ctkErrorLogLevel.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\OpenSource\CTK\Libs\Core\ctkErrorLogLevel.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkErrorLogLevel.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating moc_ctkErrorLogLevel.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd E:\OpenSource\CTK\build\CTK-build\Libs\Core
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\Apps\anaconda3\envs\builder\Library\bin\moc.exe @E:/OpenSource/CTK/build/CTK-build/Libs/Core/moc_ctkErrorLogLevel.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\OpenSource\CTK\Libs\Core\ctkErrorLogLevel.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkErrorLogLevel.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\OpenSource\CTK\build\CTK-build\CMakeFiles\d99d4ff0ddd69a2de1c1506a42cbc5c7\moc_ctkErrorLogQtMessageHandler.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating moc_ctkErrorLogQtMessageHandler.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd E:\OpenSource\CTK\build\CTK-build\Libs\Core
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\Apps\anaconda3\envs\builder\Library\bin\moc.exe @E:/OpenSource/CTK/build/CTK-build/Libs/Core/moc_ctkErrorLogQtMessageHandler.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\OpenSource\CTK\Libs\Core\ctkErrorLogQtMessageHandler.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkErrorLogQtMessageHandler.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating moc_ctkErrorLogQtMessageHandler.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd E:\OpenSource\CTK\build\CTK-build\Libs\Core
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\Apps\anaconda3\envs\builder\Library\bin\moc.exe @E:/OpenSource/CTK/build/CTK-build/Libs/Core/moc_ctkErrorLogQtMessageHandler.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\OpenSource\CTK\Libs\Core\ctkErrorLogQtMessageHandler.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkErrorLogQtMessageHandler.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating moc_ctkErrorLogQtMessageHandler.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd E:\OpenSource\CTK\build\CTK-build\Libs\Core
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\Apps\anaconda3\envs\builder\Library\bin\moc.exe @E:/OpenSource/CTK/build/CTK-build/Libs/Core/moc_ctkErrorLogQtMessageHandler.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\OpenSource\CTK\Libs\Core\ctkErrorLogQtMessageHandler.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkErrorLogQtMessageHandler.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating moc_ctkErrorLogQtMessageHandler.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd E:\OpenSource\CTK\build\CTK-build\Libs\Core
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\Apps\anaconda3\envs\builder\Library\bin\moc.exe @E:/OpenSource/CTK/build/CTK-build/Libs/Core/moc_ctkErrorLogQtMessageHandler.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\OpenSource\CTK\Libs\Core\ctkErrorLogQtMessageHandler.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkErrorLogQtMessageHandler.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\OpenSource\CTK\build\CTK-build\CMakeFiles\d99d4ff0ddd69a2de1c1506a42cbc5c7\moc_ctkErrorLogTerminalOutput.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating moc_ctkErrorLogTerminalOutput.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd E:\OpenSource\CTK\build\CTK-build\Libs\Core
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\Apps\anaconda3\envs\builder\Library\bin\moc.exe @E:/OpenSource/CTK/build/CTK-build/Libs/Core/moc_ctkErrorLogTerminalOutput.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\OpenSource\CTK\Libs\Core\ctkErrorLogTerminalOutput.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkErrorLogTerminalOutput.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating moc_ctkErrorLogTerminalOutput.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd E:\OpenSource\CTK\build\CTK-build\Libs\Core
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\Apps\anaconda3\envs\builder\Library\bin\moc.exe @E:/OpenSource/CTK/build/CTK-build/Libs/Core/moc_ctkErrorLogTerminalOutput.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\OpenSource\CTK\Libs\Core\ctkErrorLogTerminalOutput.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkErrorLogTerminalOutput.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating moc_ctkErrorLogTerminalOutput.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd E:\OpenSource\CTK\build\CTK-build\Libs\Core
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\Apps\anaconda3\envs\builder\Library\bin\moc.exe @E:/OpenSource/CTK/build/CTK-build/Libs/Core/moc_ctkErrorLogTerminalOutput.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\OpenSource\CTK\Libs\Core\ctkErrorLogTerminalOutput.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkErrorLogTerminalOutput.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating moc_ctkErrorLogTerminalOutput.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd E:\OpenSource\CTK\build\CTK-build\Libs\Core
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\Apps\anaconda3\envs\builder\Library\bin\moc.exe @E:/OpenSource/CTK/build/CTK-build/Libs/Core/moc_ctkErrorLogTerminalOutput.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\OpenSource\CTK\Libs\Core\ctkErrorLogTerminalOutput.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkErrorLogTerminalOutput.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\OpenSource\CTK\build\CTK-build\CMakeFiles\d99d4ff0ddd69a2de1c1506a42cbc5c7\moc_ctkFileLogger.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating moc_ctkFileLogger.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd E:\OpenSource\CTK\build\CTK-build\Libs\Core
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\Apps\anaconda3\envs\builder\Library\bin\moc.exe @E:/OpenSource/CTK/build/CTK-build/Libs/Core/moc_ctkFileLogger.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\OpenSource\CTK\Libs\Core\ctkFileLogger.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkFileLogger.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating moc_ctkFileLogger.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd E:\OpenSource\CTK\build\CTK-build\Libs\Core
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\Apps\anaconda3\envs\builder\Library\bin\moc.exe @E:/OpenSource/CTK/build/CTK-build/Libs/Core/moc_ctkFileLogger.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\OpenSource\CTK\Libs\Core\ctkFileLogger.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkFileLogger.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating moc_ctkFileLogger.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd E:\OpenSource\CTK\build\CTK-build\Libs\Core
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\Apps\anaconda3\envs\builder\Library\bin\moc.exe @E:/OpenSource/CTK/build/CTK-build/Libs/Core/moc_ctkFileLogger.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\OpenSource\CTK\Libs\Core\ctkFileLogger.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkFileLogger.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating moc_ctkFileLogger.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd E:\OpenSource\CTK\build\CTK-build\Libs\Core
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\Apps\anaconda3\envs\builder\Library\bin\moc.exe @E:/OpenSource/CTK/build/CTK-build/Libs/Core/moc_ctkFileLogger.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\OpenSource\CTK\Libs\Core\ctkFileLogger.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkFileLogger.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\OpenSource\CTK\build\CTK-build\CMakeFiles\d99d4ff0ddd69a2de1c1506a42cbc5c7\moc_ctkLinearValueProxy.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating moc_ctkLinearValueProxy.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd E:\OpenSource\CTK\build\CTK-build\Libs\Core
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\Apps\anaconda3\envs\builder\Library\bin\moc.exe @E:/OpenSource/CTK/build/CTK-build/Libs/Core/moc_ctkLinearValueProxy.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\OpenSource\CTK\Libs\Core\ctkLinearValueProxy.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkLinearValueProxy.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating moc_ctkLinearValueProxy.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd E:\OpenSource\CTK\build\CTK-build\Libs\Core
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\Apps\anaconda3\envs\builder\Library\bin\moc.exe @E:/OpenSource/CTK/build/CTK-build/Libs/Core/moc_ctkLinearValueProxy.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\OpenSource\CTK\Libs\Core\ctkLinearValueProxy.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkLinearValueProxy.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating moc_ctkLinearValueProxy.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd E:\OpenSource\CTK\build\CTK-build\Libs\Core
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\Apps\anaconda3\envs\builder\Library\bin\moc.exe @E:/OpenSource/CTK/build/CTK-build/Libs/Core/moc_ctkLinearValueProxy.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\OpenSource\CTK\Libs\Core\ctkLinearValueProxy.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkLinearValueProxy.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating moc_ctkLinearValueProxy.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd E:\OpenSource\CTK\build\CTK-build\Libs\Core
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\Apps\anaconda3\envs\builder\Library\bin\moc.exe @E:/OpenSource/CTK/build/CTK-build/Libs/Core/moc_ctkLinearValueProxy.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\OpenSource\CTK\Libs\Core\ctkLinearValueProxy.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkLinearValueProxy.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\OpenSource\CTK\build\CTK-build\CMakeFiles\d99d4ff0ddd69a2de1c1506a42cbc5c7\moc_ctkLogger.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating moc_ctkLogger.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd E:\OpenSource\CTK\build\CTK-build\Libs\Core
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\Apps\anaconda3\envs\builder\Library\bin\moc.exe @E:/OpenSource/CTK/build/CTK-build/Libs/Core/moc_ctkLogger.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\OpenSource\CTK\Libs\Core\ctkLogger.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkLogger.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating moc_ctkLogger.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd E:\OpenSource\CTK\build\CTK-build\Libs\Core
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\Apps\anaconda3\envs\builder\Library\bin\moc.exe @E:/OpenSource/CTK/build/CTK-build/Libs/Core/moc_ctkLogger.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\OpenSource\CTK\Libs\Core\ctkLogger.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkLogger.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating moc_ctkLogger.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd E:\OpenSource\CTK\build\CTK-build\Libs\Core
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\Apps\anaconda3\envs\builder\Library\bin\moc.exe @E:/OpenSource/CTK/build/CTK-build/Libs/Core/moc_ctkLogger.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\OpenSource\CTK\Libs\Core\ctkLogger.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkLogger.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating moc_ctkLogger.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd E:\OpenSource\CTK\build\CTK-build\Libs\Core
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\Apps\anaconda3\envs\builder\Library\bin\moc.exe @E:/OpenSource/CTK/build/CTK-build/Libs/Core/moc_ctkLogger.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\OpenSource\CTK\Libs\Core\ctkLogger.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkLogger.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\OpenSource\CTK\build\CTK-build\CMakeFiles\d99d4ff0ddd69a2de1c1506a42cbc5c7\moc_ctkModelTester.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating moc_ctkModelTester.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd E:\OpenSource\CTK\build\CTK-build\Libs\Core
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\Apps\anaconda3\envs\builder\Library\bin\moc.exe @E:/OpenSource/CTK/build/CTK-build/Libs/Core/moc_ctkModelTester.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\OpenSource\CTK\Libs\Core\ctkModelTester.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkModelTester.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating moc_ctkModelTester.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd E:\OpenSource\CTK\build\CTK-build\Libs\Core
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\Apps\anaconda3\envs\builder\Library\bin\moc.exe @E:/OpenSource/CTK/build/CTK-build/Libs/Core/moc_ctkModelTester.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\OpenSource\CTK\Libs\Core\ctkModelTester.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkModelTester.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating moc_ctkModelTester.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd E:\OpenSource\CTK\build\CTK-build\Libs\Core
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\Apps\anaconda3\envs\builder\Library\bin\moc.exe @E:/OpenSource/CTK/build/CTK-build/Libs/Core/moc_ctkModelTester.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\OpenSource\CTK\Libs\Core\ctkModelTester.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkModelTester.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating moc_ctkModelTester.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd E:\OpenSource\CTK\build\CTK-build\Libs\Core
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\Apps\anaconda3\envs\builder\Library\bin\moc.exe @E:/OpenSource/CTK/build/CTK-build/Libs/Core/moc_ctkModelTester.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\OpenSource\CTK\Libs\Core\ctkModelTester.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkModelTester.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\OpenSource\CTK\build\CTK-build\CMakeFiles\d99d4ff0ddd69a2de1c1506a42cbc5c7\moc_ctkValueProxy.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating moc_ctkValueProxy.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd E:\OpenSource\CTK\build\CTK-build\Libs\Core
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\Apps\anaconda3\envs\builder\Library\bin\moc.exe @E:/OpenSource/CTK/build/CTK-build/Libs/Core/moc_ctkValueProxy.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\OpenSource\CTK\Libs\Core\ctkValueProxy.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkValueProxy.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating moc_ctkValueProxy.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd E:\OpenSource\CTK\build\CTK-build\Libs\Core
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\Apps\anaconda3\envs\builder\Library\bin\moc.exe @E:/OpenSource/CTK/build/CTK-build/Libs/Core/moc_ctkValueProxy.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\OpenSource\CTK\Libs\Core\ctkValueProxy.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkValueProxy.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating moc_ctkValueProxy.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd E:\OpenSource\CTK\build\CTK-build\Libs\Core
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\Apps\anaconda3\envs\builder\Library\bin\moc.exe @E:/OpenSource/CTK/build/CTK-build/Libs/Core/moc_ctkValueProxy.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\OpenSource\CTK\Libs\Core\ctkValueProxy.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkValueProxy.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating moc_ctkValueProxy.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd E:\OpenSource\CTK\build\CTK-build\Libs\Core
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\Apps\anaconda3\envs\builder\Library\bin\moc.exe @E:/OpenSource/CTK/build/CTK-build/Libs/Core/moc_ctkValueProxy.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\OpenSource\CTK\Libs\Core\ctkValueProxy.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkValueProxy.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\OpenSource\CTK\build\CTK-build\CMakeFiles\d99d4ff0ddd69a2de1c1506a42cbc5c7\moc_ctkWorkflow.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating moc_ctkWorkflow.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd E:\OpenSource\CTK\build\CTK-build\Libs\Core
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\Apps\anaconda3\envs\builder\Library\bin\moc.exe @E:/OpenSource/CTK/build/CTK-build/Libs/Core/moc_ctkWorkflow.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\OpenSource\CTK\Libs\Core\ctkWorkflow.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkWorkflow.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating moc_ctkWorkflow.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd E:\OpenSource\CTK\build\CTK-build\Libs\Core
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\Apps\anaconda3\envs\builder\Library\bin\moc.exe @E:/OpenSource/CTK/build/CTK-build/Libs/Core/moc_ctkWorkflow.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\OpenSource\CTK\Libs\Core\ctkWorkflow.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkWorkflow.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating moc_ctkWorkflow.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd E:\OpenSource\CTK\build\CTK-build\Libs\Core
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\Apps\anaconda3\envs\builder\Library\bin\moc.exe @E:/OpenSource/CTK/build/CTK-build/Libs/Core/moc_ctkWorkflow.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\OpenSource\CTK\Libs\Core\ctkWorkflow.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkWorkflow.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating moc_ctkWorkflow.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd E:\OpenSource\CTK\build\CTK-build\Libs\Core
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\Apps\anaconda3\envs\builder\Library\bin\moc.exe @E:/OpenSource/CTK/build/CTK-build/Libs/Core/moc_ctkWorkflow.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\OpenSource\CTK\Libs\Core\ctkWorkflow.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkWorkflow.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\OpenSource\CTK\build\CTK-build\CMakeFiles\d99d4ff0ddd69a2de1c1506a42cbc5c7\moc_ctkWorkflow_p.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating moc_ctkWorkflow_p.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd E:\OpenSource\CTK\build\CTK-build\Libs\Core
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\Apps\anaconda3\envs\builder\Library\bin\moc.exe @E:/OpenSource/CTK/build/CTK-build/Libs/Core/moc_ctkWorkflow_p.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\OpenSource\CTK\Libs\Core\ctkWorkflow_p.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkWorkflow_p.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating moc_ctkWorkflow_p.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd E:\OpenSource\CTK\build\CTK-build\Libs\Core
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\Apps\anaconda3\envs\builder\Library\bin\moc.exe @E:/OpenSource/CTK/build/CTK-build/Libs/Core/moc_ctkWorkflow_p.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\OpenSource\CTK\Libs\Core\ctkWorkflow_p.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkWorkflow_p.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating moc_ctkWorkflow_p.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd E:\OpenSource\CTK\build\CTK-build\Libs\Core
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\Apps\anaconda3\envs\builder\Library\bin\moc.exe @E:/OpenSource/CTK/build/CTK-build/Libs/Core/moc_ctkWorkflow_p.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\OpenSource\CTK\Libs\Core\ctkWorkflow_p.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkWorkflow_p.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating moc_ctkWorkflow_p.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd E:\OpenSource\CTK\build\CTK-build\Libs\Core
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\Apps\anaconda3\envs\builder\Library\bin\moc.exe @E:/OpenSource/CTK/build/CTK-build/Libs/Core/moc_ctkWorkflow_p.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\OpenSource\CTK\Libs\Core\ctkWorkflow_p.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkWorkflow_p.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\OpenSource\CTK\build\CTK-build\CMakeFiles\d99d4ff0ddd69a2de1c1506a42cbc5c7\moc_ctkWorkflowStep_p.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating moc_ctkWorkflowStep_p.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd E:\OpenSource\CTK\build\CTK-build\Libs\Core
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\Apps\anaconda3\envs\builder\Library\bin\moc.exe @E:/OpenSource/CTK/build/CTK-build/Libs/Core/moc_ctkWorkflowStep_p.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\OpenSource\CTK\Libs\Core\ctkWorkflowStep_p.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkWorkflowStep_p.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating moc_ctkWorkflowStep_p.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd E:\OpenSource\CTK\build\CTK-build\Libs\Core
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\Apps\anaconda3\envs\builder\Library\bin\moc.exe @E:/OpenSource/CTK/build/CTK-build/Libs/Core/moc_ctkWorkflowStep_p.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\OpenSource\CTK\Libs\Core\ctkWorkflowStep_p.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkWorkflowStep_p.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating moc_ctkWorkflowStep_p.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd E:\OpenSource\CTK\build\CTK-build\Libs\Core
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\Apps\anaconda3\envs\builder\Library\bin\moc.exe @E:/OpenSource/CTK/build/CTK-build/Libs/Core/moc_ctkWorkflowStep_p.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\OpenSource\CTK\Libs\Core\ctkWorkflowStep_p.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkWorkflowStep_p.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating moc_ctkWorkflowStep_p.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd E:\OpenSource\CTK\build\CTK-build\Libs\Core
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\Apps\anaconda3\envs\builder\Library\bin\moc.exe @E:/OpenSource/CTK/build/CTK-build/Libs/Core/moc_ctkWorkflowStep_p.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\OpenSource\CTK\Libs\Core\ctkWorkflowStep_p.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkWorkflowStep_p.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\OpenSource\CTK\build\CTK-build\CMakeFiles\d99d4ff0ddd69a2de1c1506a42cbc5c7\moc_ctkWorkflowTransitions.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating moc_ctkWorkflowTransitions.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd E:\OpenSource\CTK\build\CTK-build\Libs\Core
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\Apps\anaconda3\envs\builder\Library\bin\moc.exe @E:/OpenSource/CTK/build/CTK-build/Libs/Core/moc_ctkWorkflowTransitions.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\OpenSource\CTK\Libs\Core\ctkWorkflowTransitions.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkWorkflowTransitions.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating moc_ctkWorkflowTransitions.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd E:\OpenSource\CTK\build\CTK-build\Libs\Core
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\Apps\anaconda3\envs\builder\Library\bin\moc.exe @E:/OpenSource/CTK/build/CTK-build/Libs/Core/moc_ctkWorkflowTransitions.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\OpenSource\CTK\Libs\Core\ctkWorkflowTransitions.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkWorkflowTransitions.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating moc_ctkWorkflowTransitions.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd E:\OpenSource\CTK\build\CTK-build\Libs\Core
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\Apps\anaconda3\envs\builder\Library\bin\moc.exe @E:/OpenSource/CTK/build/CTK-build/Libs/Core/moc_ctkWorkflowTransitions.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\OpenSource\CTK\Libs\Core\ctkWorkflowTransitions.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkWorkflowTransitions.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating moc_ctkWorkflowTransitions.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd E:\OpenSource\CTK\build\CTK-build\Libs\Core
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\Apps\anaconda3\envs\builder\Library\bin\moc.exe @E:/OpenSource/CTK/build/CTK-build/Libs/Core/moc_ctkWorkflowTransitions.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\OpenSource\CTK\Libs\Core\ctkWorkflowTransitions.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkWorkflowTransitions.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\OpenSource\CTK\Libs\Core\CMakeLists.txt">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building Custom Rule E:/OpenSource/CTK/Libs/Core/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
D:\Apps\CMake\bin\cmake.exe -SE:/OpenSource/CTK -BE:/OpenSource/CTK/build/CTK-build --check-stamp-file E:/OpenSource/CTK/build/CTK-build/Libs/Core/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\OpenSource\CTK\Libs\Core\CMake\ctkMacroBFDCheck.cmake;E:\OpenSource\CTK\Libs\Core\target_libraries.cmake;E:\OpenSource\CTK\Libs\ctkExport.h.in;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\OpenSource\CTK\build\CTK-build\Libs\Core\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building Custom Rule E:/OpenSource/CTK/Libs/Core/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
D:\Apps\CMake\bin\cmake.exe -SE:/OpenSource/CTK -BE:/OpenSource/CTK/build/CTK-build --check-stamp-file E:/OpenSource/CTK/build/CTK-build/Libs/Core/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\OpenSource\CTK\Libs\Core\CMake\ctkMacroBFDCheck.cmake;E:\OpenSource\CTK\Libs\Core\target_libraries.cmake;E:\OpenSource\CTK\Libs\ctkExport.h.in;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\OpenSource\CTK\build\CTK-build\Libs\Core\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Building Custom Rule E:/OpenSource/CTK/Libs/Core/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
D:\Apps\CMake\bin\cmake.exe -SE:/OpenSource/CTK -BE:/OpenSource/CTK/build/CTK-build --check-stamp-file E:/OpenSource/CTK/build/CTK-build/Libs/Core/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\OpenSource\CTK\Libs\Core\CMake\ctkMacroBFDCheck.cmake;E:\OpenSource\CTK\Libs\Core\target_libraries.cmake;E:\OpenSource\CTK\Libs\ctkExport.h.in;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\OpenSource\CTK\build\CTK-build\Libs\Core\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Building Custom Rule E:/OpenSource/CTK/Libs/Core/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
D:\Apps\CMake\bin\cmake.exe -SE:/OpenSource/CTK -BE:/OpenSource/CTK/build/CTK-build --check-stamp-file E:/OpenSource/CTK/build/CTK-build/Libs/Core/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\OpenSource\CTK\Libs\Core\CMake\ctkMacroBFDCheck.cmake;E:\OpenSource\CTK\Libs\Core\target_libraries.cmake;E:\OpenSource\CTK\Libs\ctkExport.h.in;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\OpenSource\CTK\build\CTK-build\Libs\Core\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="E:\OpenSource\CTK\Libs\Core\ctkAbstractFactory.h" />
    <None Include="E:\OpenSource\CTK\Libs\Core\ctkAbstractFactory.tpp" />
    <ClInclude Include="E:\OpenSource\CTK\Libs\Core\ctkAbstractFileBasedFactory.h" />
    <None Include="E:\OpenSource\CTK\Libs\Core\ctkAbstractFileBasedFactory.tpp" />
    <ClInclude Include="E:\OpenSource\CTK\Libs\Core\ctkAbstractObjectFactory.h" />
    <None Include="E:\OpenSource\CTK\Libs\Core\ctkAbstractObjectFactory.tpp" />
    <ClInclude Include="E:\OpenSource\CTK\Libs\Core\ctkAbstractPluginFactory.h" />
    <None Include="E:\OpenSource\CTK\Libs\Core\ctkAbstractPluginFactory.tpp" />
    <ClInclude Include="E:\OpenSource\CTK\Libs\Core\ctkAbstractQObjectFactory.h" />
    <None Include="E:\OpenSource\CTK\Libs\Core\ctkAbstractQObjectFactory.tpp" />
    <ClInclude Include="E:\OpenSource\CTK\Libs\Core\ctkAbstractLibraryFactory.h" />
    <None Include="E:\OpenSource\CTK\Libs\Core\ctkAbstractLibraryFactory.tpp" />
    <ClCompile Include="E:\OpenSource\CTK\Libs\Core\ctkBackTrace.cpp" />
    <ClCompile Include="E:\OpenSource\CTK\Libs\Core\ctkBooleanMapper.cpp" />
    <ClInclude Include="E:\OpenSource\CTK\Libs\Core\ctkBooleanMapper.h" />
    <ClCompile Include="E:\OpenSource\CTK\Libs\Core\ctkCallback.cpp" />
    <ClInclude Include="E:\OpenSource\CTK\Libs\Core\ctkCallback.h" />
    <ClCompile Include="E:\OpenSource\CTK\Libs\Core\ctkCommandLineParser.cpp" />
    <ClInclude Include="E:\OpenSource\CTK\Libs\Core\ctkCommandLineParser.h" />
    <ClCompile Include="E:\OpenSource\CTK\Libs\Core\ctkCoreSettings.cpp" />
    <ClInclude Include="E:\OpenSource\CTK\Libs\Core\ctkCoreSettings.h" />
    <ClCompile Include="E:\OpenSource\CTK\Libs\Core\ctkCoreTestingUtilities.cpp" />
    <None Include="E:\OpenSource\CTK\Libs\Core\ctkCoreTestingUtilities.tpp" />
    <ClInclude Include="E:\OpenSource\CTK\Libs\Core\ctkCoreTestingUtilities.h" />
    <ClCompile Include="E:\OpenSource\CTK\Libs\Core\ctkDependencyGraph.cpp" />
    <ClInclude Include="E:\OpenSource\CTK\Libs\Core\ctkDependencyGraph.h" />
    <ClCompile Include="E:\OpenSource\CTK\Libs\Core\ctkErrorLogAbstractMessageHandler.cpp" />
    <ClInclude Include="E:\OpenSource\CTK\Libs\Core\ctkErrorLogAbstractMessageHandler.h" />
    <ClCompile Include="E:\OpenSource\CTK\Libs\Core\ctkErrorLogAbstractModel.cpp" />
    <ClInclude Include="E:\OpenSource\CTK\Libs\Core\ctkErrorLogAbstractModel.h" />
    <ClInclude Include="E:\OpenSource\CTK\Libs\Core\ctkErrorLogContext.h" />
    <ClCompile Include="E:\OpenSource\CTK\Libs\Core\ctkErrorLogFDMessageHandler.cpp" />
    <ClInclude Include="E:\OpenSource\CTK\Libs\Core\ctkErrorLogFDMessageHandler.h" />
    <ClInclude Include="E:\OpenSource\CTK\Libs\Core\ctkErrorLogFDMessageHandler_p.h" />
    <ClCompile Include="E:\OpenSource\CTK\Libs\Core\ctkErrorLogLevel.cpp" />
    <ClInclude Include="E:\OpenSource\CTK\Libs\Core\ctkErrorLogLevel.h" />
    <ClCompile Include="E:\OpenSource\CTK\Libs\Core\ctkErrorLogQtMessageHandler.cpp" />
    <ClInclude Include="E:\OpenSource\CTK\Libs\Core\ctkErrorLogQtMessageHandler.h" />
    <ClCompile Include="E:\OpenSource\CTK\Libs\Core\ctkErrorLogStreamMessageHandler.cpp" />
    <ClInclude Include="E:\OpenSource\CTK\Libs\Core\ctkErrorLogStreamMessageHandler.h" />
    <ClCompile Include="E:\OpenSource\CTK\Libs\Core\ctkErrorLogTerminalOutput.cpp" />
    <ClInclude Include="E:\OpenSource\CTK\Libs\Core\ctkErrorLogTerminalOutput.h" />
    <ClCompile Include="E:\OpenSource\CTK\Libs\Core\ctkException.cpp" />
    <ClInclude Include="E:\OpenSource\CTK\Libs\Core\ctkException.h" />
    <ClCompile Include="E:\OpenSource\CTK\Libs\Core\ctkFileLogger.cpp" />
    <ClInclude Include="E:\OpenSource\CTK\Libs\Core\ctkFileLogger.h" />
    <ClCompile Include="E:\OpenSource\CTK\Libs\Core\ctkHighPrecisionTimer.cpp" />
    <ClCompile Include="E:\OpenSource\CTK\Libs\Core\ctkLinearValueProxy.cpp" />
    <ClInclude Include="E:\OpenSource\CTK\Libs\Core\ctkLinearValueProxy.h" />
    <ClCompile Include="E:\OpenSource\CTK\Libs\Core\ctkLogger.cpp" />
    <ClInclude Include="E:\OpenSource\CTK\Libs\Core\ctkLogger.h" />
    <ClCompile Include="E:\OpenSource\CTK\Libs\Core\ctkModelTester.cpp" />
    <ClInclude Include="E:\OpenSource\CTK\Libs\Core\ctkModelTester.h" />
    <ClInclude Include="E:\OpenSource\CTK\Libs\Core\ctkPimpl.h" />
    <ClCompile Include="E:\OpenSource\CTK\Libs\Core\ctkScopedCurrentDir.cpp" />
    <ClInclude Include="E:\OpenSource\CTK\Libs\Core\ctkScopedCurrentDir.h" />
    <ClInclude Include="E:\OpenSource\CTK\Libs\Core\ctkSingleton.h" />
    <ClCompile Include="E:\OpenSource\CTK\Libs\Core\ctkUtils.cpp" />
    <ClInclude Include="E:\OpenSource\CTK\Libs\Core\ctkUtils.h" />
    <ClCompile Include="E:\OpenSource\CTK\Libs\Core\ctkValueProxy.cpp" />
    <ClInclude Include="E:\OpenSource\CTK\Libs\Core\ctkValueProxy.h" />
    <ClInclude Include="E:\OpenSource\CTK\Libs\Core\ctkWorkflow.h" />
    <ClCompile Include="E:\OpenSource\CTK\Libs\Core\ctkWorkflow.cpp" />
    <ClInclude Include="E:\OpenSource\CTK\Libs\Core\ctkWorkflow_p.h" />
    <ClInclude Include="E:\OpenSource\CTK\Libs\Core\ctkWorkflowStep.h" />
    <ClCompile Include="E:\OpenSource\CTK\Libs\Core\ctkWorkflowStep.cpp" />
    <ClInclude Include="E:\OpenSource\CTK\Libs\Core\ctkWorkflowStep_p.h" />
    <ClInclude Include="E:\OpenSource\CTK\Libs\Core\ctkWorkflowTransitions.h" />
    <ClCompile Include="E:\OpenSource\CTK\Libs\Core\ctkSetName.cpp" />
    <ClInclude Include="E:\OpenSource\CTK\Libs\Core\ctkSetName.h" />
    <ClCompile Include="E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkBooleanMapper.cpp" />
    <ClCompile Include="E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkCallback.cpp" />
    <ClCompile Include="E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkCommandLineParser.cpp" />
    <ClCompile Include="E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkCoreSettings.cpp" />
    <ClCompile Include="E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkErrorLogAbstractMessageHandler.cpp" />
    <ClCompile Include="E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkErrorLogAbstractModel.cpp" />
    <ClCompile Include="E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkErrorLogFDMessageHandler_p.cpp" />
    <ClCompile Include="E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkErrorLogLevel.cpp" />
    <ClCompile Include="E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkErrorLogQtMessageHandler.cpp" />
    <ClCompile Include="E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkErrorLogTerminalOutput.cpp" />
    <ClCompile Include="E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkFileLogger.cpp" />
    <ClCompile Include="E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkLinearValueProxy.cpp" />
    <ClCompile Include="E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkLogger.cpp" />
    <ClCompile Include="E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkModelTester.cpp" />
    <ClCompile Include="E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkValueProxy.cpp" />
    <ClCompile Include="E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkWorkflow.cpp" />
    <ClCompile Include="E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkWorkflow_p.cpp" />
    <ClCompile Include="E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkWorkflowStep_p.cpp" />
    <ClCompile Include="E:\OpenSource\CTK\build\CTK-build\Libs\Core\moc_ctkWorkflowTransitions.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="E:\OpenSource\CTK\build\CTK-build\ZERO_CHECK.vcxproj">
      <Project>{CBA0A907-6526-3766-988C-38FA2CEC0F28}</Project>
      <Name>ZERO_CHECK</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>